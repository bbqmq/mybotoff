

            # –ö–û–ù–°–¢–†–£–ö–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•

 cursor.execute("""CREATE TABLE IF NOT EXISTS user_family(
      user_name STRING,
      user_id INT,
      family STRING,
      rank INT
 )
""")

 cursor.execute("""CREATE TABLE IF NOT EXISTS family_id(
      id INT
 )
 """)

 cursor.execute("""CREATE TABLE IF NOT EXISTS family(
      name STRING,
      owner_id INT,
      owner_name STRING,
      id INT,
      balance INT,
      opis STRING,
      time_name INT
 )
 """)





        # –ö–û–ú–ê–ù–î–´

     if message.text.lower() == '–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ —Å–µ–º—å—é':
       if not message.reply_to_message:
          await message.reply("‚ùóÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>", parse_mode='html')
          return

       user_id = message.from_user.id
       reply_user_id = message.reply_to_message.from_user.id

       if reply_user_id == user_id:
          return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å <b>—Å–∞–º–æ–≥–æ —Å–µ–±—è</b> –≤ —Å–µ–º—å—é.', parse_mode='html')
       else:
          pass
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3
         
          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass
      
       if rank_family < 2:
          return await message.reply(f'‚ùóÔ∏è –ü—Ä–∏–≥–ª–∞—à–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–µ–º—å—é –º–æ–∂–Ω–æ –æ—Ç <b>2 —Ä–∞–Ω–≥–∞</b>', parse_Mode='html')
       else:
          pass

       user1 = message.reply_to_message.from_user.id
       user2 = reply_user_name
       keyboard = types.InlineKeyboardMarkup()
       keyboard.add(types.InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ", callback_data=f"accept_{user1}:{user2}:{name_family}"))

       text = f'''
 üë∂ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>, –≤–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –≤ —Å–µ–º—å—é ¬´<b>{name_family}</b>¬ª
       '''

       await message.answer(text, reply_markup=keyboard, parse_mode='html')

     if message.text.startswith('c–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é') or message.text.startswith('–°–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é'):
        user_id = message.from_user.id
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
        user_name = str(user_name[0])

        all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
        all_family2 = []
       
        for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])
      
        if user_id in all_family2:
          return await message.reply(f'‚ùóÔ∏è–£ –≤–∞—Å –µ—Å—Ç—å <b>—Å–≤–æ—è —Å–µ–º—å—è.</b> –ó–∞—á–µ–º –≤–∞–º –µ—â—ë –æ–¥–Ω–∞? | <code>–†–∞—Å–ø—É—Å—Ç–∏—Ç—å —Å–µ–º—å—é</code> - —É–¥–∞–ª–µ–Ω–∏–µ —Å–µ–º—å–∏ ', parse_mode='html')
        else:
          pass

        user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

        if user_id_family != None:
          return await message.reply('‚ùóÔ∏è –í—ã —É–∂–µ <b>—Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–µ–º—å–µ</b> | –Ω–∞–ø–∏—à–∏—Ç–µ ¬´<code>–≤—ã–π—Ç–∏ —Å —Å–µ–º—å–∏</code>¬ª - –¥–ª—è –≤—ã—Ö–æ–¥–∞ —Å –≤–∞—à–µ–π —Å–µ–º—å–∏',parse_mode='html')
        else:
          pass

        donate_coins = cursor.execute("SELECT donate_coins from users where user_id = ?",(message.from_user.id,)).fetchone()
        donate_coins = int(donate_coins[0])

        if donate_coins < config.cash_family:
          return await message.reply(f'‚ùóÔ∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ Donate-Coins</b> | –°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{config.cash_family} Donate-Coins</b> ü™ô')
        else:
          pass
       
        name_family = message.text.split()[2:]
        name_family2 = ' '.join(name_family)
        full_name_family = (name_family2).replace(' ','').replace('üá∑üá∫', '').replace('–†–æ—Å—Å–∏—è', '—Ä–æ—Å—Å–∏—è').replace('—Ä–æ—Å—Å–∏—è', '')

        if len(full_name_family) < 4:
          return await message.reply('‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ <b>4 —Å–∏–º–≤–æ–ª–æ–≤</b>', parse_Mode='html')
        elif len(full_name_family) > 35:
          return await message.reply(f'‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ <b>35 —Å–∏–º–≤–æ–ª–æ–≤</b>', parse_mode='html')
        else:
          pass

        all_family_name = cursor.execute('SELECT name from family').fetchall()
        all_family_name2 = []

        for all_family_name3 in all_family_name:
          all_family_name2.append(all_family_name3[0])
      
        if full_name_family in all_family_name2:
         return await message.reply(f'‚ùóÔ∏è –°–µ–º—å—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´<b>{full_name_family}</b>¬ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', parse_mode='html')
        else:
          pass
       
        family_id = cursor.execute('SELECT id from family_id').fetchone()
        family_id = int(family_id[0])
        new_family_id = family_id + 1

        text = f'''
 ‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ —Å–µ–º—å—é ¬´<b>{full_name_family}</b>¬ª
        '''

        text2 = f'''
 ‚ùï –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–µ–π —Å–µ–º—å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ <code>–º–æ—è —Å–µ–º—å—è</code>
        '''
        time_family = time.time()
        opis = ''
        cursor.execute(f'UPDATE family_id SET id = {new_family_id}')
        cursor.execute("INSERT INTO family VALUES(?, ?, ?, ?, ?, ?, ?);",(full_name_family, user_id, user_name, new_family_id, 0, opis, time_family))
        connect.commit()
        await message.answer(text, parse_mode='html')
        await message.answer(text2, parse_mode='html')





     if message.text.lower() in ['–º–æ—è —Å–µ–º—å—è', "—Å–µ–º—å—è"]:
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0
       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       owner_name = cursor.execute(f'SELECT owner_name from family where name = "{name_family}"').fetchone()
       owner_name = owner_name[0]

       rank3 = cursor.execute(f'SELECT user_name from user_family where rank = {3} and family = "{name_family}"').fetchall()
       all_rank3 = []

       for user_rank3 in rank3:
          all_rank3.append(user_rank3[0])

       full_all_rank3 = ' '.join(all_rank3)

       if full_all_rank3 == '':
          full_all_rank3 = '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üòï'
       else:
          pass

       rank2 = cursor.execute(f'SELECT user_name from user_family where rank = {2} and family = "{name_family}"').fetchall()
       all_rank2 = []

       for user_rank2 in rank2:
          all_rank2.append(user_rank2[0])

       full_all_rank2 = ' '.join(all_rank2)

      if full_all_rank2 == '':
          full_all_rank2 = '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üòï'
       else:
          pass
      
       id_family = cursor.execute(f'SELECT id from family where name = "{name_family}"').fetchone()
       id_family = int(id_family[0])

       sqlite_select_query2 = f"""SELECT * from user_family where family = \"{name_family}\""""
       cursor.execute(sqlite_select_query2)
       all_user_family = cursor.fetchall()

       balance_family = cursor.execute(f'SELECT balance from family where name = "{name_family}"').fetchone()
       balance_family = int(balance_family[0])

       opis_family = cursor.execute(f'SELECT opis from family where name = "{name_family}"').fetchone()
       opis_family = opis_family[0]
      
       if opis_family == '':
          opis_family = '–ü—É—Å—Ç–æ–µ'
       else:
          pass

       text = f'''
 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Å–µ–º—å—é ¬´<b>{name_family}</b>¬ª üë®‚Äçüë©‚Äçüëß‚Äçüë¶
 ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
 ü§µ‚Äç‚ôÇÔ∏è –û—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–µ–º—å–∏: {owner_name}
 üë®‚Äçüíª –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å (3 —Ä–∞–Ω–≥): {full_all_rank3} 
 üßë‚Äçüíº –ü–æ–º–æ—â–Ω–∏–∫–∏ (2 —Ä–∞–Ω–≥): {full_all_rank2} 
 ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
 üîé ID: <code>{id_family}</code>
 üë• –ò–≥—Ä–æ–∫–æ–≤ –≤ —Å–µ–º—å–µ: <b>{len(all_user_family)}</b>
 üí∞ –ú–µ—à–æ–∫ —Å–µ–º—å–∏: <code>{balance_family} —Å. –º–æ–Ω–µ—Ç</code>
 üí≠ –û–ø–∏—Å–∞–Ω–∏—è —Å–µ–º—å–∏: <i>{opis_family}</i>
       '''
       await message.reply(text, parse_mode='html')






     if message.text.lower() == '–≤—ã–π—Ç–∏ —Å —Å–µ–º—å–∏':
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          status_owner_family = 'off'

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3

          status_owner_family = 'on'
         
          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

      
       if status_owner_family == 'on':
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ–º—å–∏</b>, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å–≤–æ—é —Å–µ–º—å—é | –ü—Ä–æ–ø–∏—à–∏—Ç–µ <code>–†–∞—Å–ø—É—Å—Ç–∏—Ç—å —Å–µ–º—å—é</code> –¥–ª—è –µ—ë —É–¥–∞–ª–µ–Ω–∏–µ', parse_mode='html')
       else:
          pass

       cursor.execute(f'DELETE from user_family where family = "{name_family}"')

       text = f'''
 üòß –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ–º—å—é ¬´<b>{name_family}</b>¬ª 
       '''

       await message.reply(text, parse_mode='html')

     if message.text.lower() == '—Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å —Å–µ–º—å—é':
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
         rank_family = int(rank_family[0])  

          status_owner_family = 'off'

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
         proverka_family += 1

       if user_id in all_family2:
          rank_family = 3

          status_owner_family = 'on'
         
          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       if status_owner_family == 'off':
          return await message.reply(f'‚ùóÔ∏è –†–∞—Å–ø—É—Å—Ç–∏—Ç—å —Å–µ–º—å—é –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ <b>–µ—ë –≤–ª–∞–¥–µ–ª–µ—Ü</b>', parse_mode='html')
      else:
          pass

       cursor.execute(f'DELETE from family where name = "{name_family}"')
       cursor.execute(f'DELETE from user_family where family = "{name_family}"')

       text = f'''
 ü•≤ –í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø—É—Å—Ç–∏–ª–∏ —Å–µ–º—å—é ¬´<b>{name_family}</b>¬ª
       '''

       await message.reply(text, parse_mode='html')
    if message.text.startswith('+–æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ–º—å–∏'):
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          name_family5 = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family5 = name_family5[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3
         
          name_family5 = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family5 = name_family5[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
         return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
      else:
         pass

       if rank_family < 3:
          return await message.reply(f'‚ùóÔ∏è –ú–µ–Ω—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ–º—å–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å <b>3 —Ä–∞–Ω–≥–∞</b>', parse_mode='html')
       else:
          pass

       new_opis = message.text[16:]
      
       if len(new_opis) > 150:
          return await message.reply('‚ùóÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª—å—à–µ <b>150 —Å–∏–º–≤–æ–ª–æ–≤</b>', parse_mode='html')
       else:
          pass
      
       cursor.execute(f'UPDATE family SET opis = "{new_opis}" where name = "{name_family5}"')

       text = f'''
 ‚úÖ –í—ã <b>—É—Å–ø–µ—à–Ω–æ</b> –ø–æ–º–µ–Ω—è–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ–º—å–∏
#       '''

       await message.reply(text, parse_mode='html')





     if message.text.lower() == '–≤—ã–≥–Ω–∞—Ç—å –∏–∑ —Å–µ–º—å–∏':
       if not message.reply_to_message:
          await message.reply("‚ùóÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>", parse_mode='html')
          return

       user_id = message.from_user.id
       reply_user_id = message.reply_to_message.from_user.id

       if user_id == reply_user_id:
          return await message.reply('‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Å–∞–º–∏ —Å–µ–±—è | –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <code>–í—ã–π—Ç–∏ —Å —Å–µ–º—å–∏</code>', parse_mode='html')
       else:
         pass

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          status_owner_family = 'off'

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3

          status_owner_family = 'on'

          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       if rank_family < 3:
          return await message.reply(f'‚ùóÔ∏è –í—ã–≥–∞–Ω—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–æ–∂–Ω–æ –æ—Ç <b>3 —Ä–∞–Ω–≥–∞</b>', parse_mode='html')
       else:
          pass
      
       reply_proverka_family = 0

       reply_user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {reply_user_id}').fetchone()

       if reply_user_id_family != None:
          reply_rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {reply_user_id}').fetchone()
          reply_rank_family = int(reply_rank_family[0])  

          reply_name_family = cursor.execute(f'SELECT family from user_family where user_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

       if reply_user_id in all_family2:
          reply_rank_family = 3
         
          reply_name_family = cursor.execute(f'SELECT name from family where owner_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

       if reply_proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ')
       else:
          pass
      
       if reply_name_family != name_family:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ')
       else:
          pass


       if reply_rank_family == 3:
          if status_owner_family == 'on':
             pass
          else:
             return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å <b>3 —Ä–∞–Ω–≥–æ–º</b> | <i>–ü–æ–¥ —Å–∏–ª—É —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —Å–µ–º—å–∏</i>', parse_mode='html')
       else:
          pass

       cursor.execute(f'DELETE from user_family where user_id = {reply_user_id}')
       connect.commit()

       text = f'''
 üëÄ –í—ã –≤—ã–≥–Ω–∞–ª–∏ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> —Å —Å–µ–º—å–∏ ¬´<b>{name_family}</b>¬ª
       '''

       await message.reply(text, parse_mode='html')


     if message.text.lower() == '+—Ä–∞–Ω–≥ —Å–µ–º—å–∏':
       if not message.reply_to_message:
          await message.reply("‚ùóÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>", parse_mode='html')
          return

       user_id = message.from_user.id
       reply_user_id = message.reply_to_message.from_user.id

       if user_id == reply_user_id:
          return await message.reply('‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å —Å–∞–º —Å–µ–±–µ —Ä–∞–Ω–≥')
       else:
          pass

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          status_owner_family = 'off'

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3

          status_owner_family = 'on'

          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       if rank_family < 3:
          return await message.reply(f'‚ùóÔ∏è –ü–æ–≤—ã—à–∞—Ç—å —Ä–∞–Ω–≥ –≤ —Å–µ–º—å–µ –º–æ–∂–Ω–æ –æ—Ç <b>3 —Ä–∞–Ω–≥–∞</b>', parse_mode='html')
       else:
          pass
      
       reply_proverka_family = 0

       reply_user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {reply_user_id}').fetchone()

       if reply_user_id_family != None:
          reply_rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {reply_user_id}').fetchone()
         reply_rank_family = int(reply_rank_family[0])  

          reply_name_family = cursor.execute(f'SELECT family from user_family where user_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

       if reply_user_id in all_family2:
          reply_rank_family = 3
         
          reply_name_family = cursor.execute(f'SELECT name from family where owner_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

       if reply_proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ')
       else:
          pass
      
       if reply_name_family != name_family:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ')
       else:
          pass

       if reply_rank_family == 3:
          return await message.reply(f'‚ùóÔ∏è –£ –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥', parse_mode='html')
       else:
          pass
      

       cursor.execute(f'UPDATE user_family SET rank = {reply_rank_family + 1} WHERE user_id = {reply_user_id}')
       connect.commit()

       text = f'''
 üîº –í—ã –ø–æ–≤—ã—Å–∏–ª–∏ –Ω–∞ 1 —Ä–∞–Ω–≥ –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
       '''
       await message.reply(text, parse_mode='html')







     if message.text.lower() == '-—Ä–∞–Ω–≥ —Å–µ–º—å–∏':
      if not message.reply_to_message:
          await message.reply("‚ùóÔ∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>", parse_mode='html')
          return

       user_id = message.from_user.id
       reply_user_id = message.reply_to_message.from_user.id

       if user_id == reply_user_id:
          return await message.reply('‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–Ω–∏–∑–∏—Ç—å —Å–∞–º —Å–µ–±–µ —Ä–∞–Ω–≥')
       else:
          pass

       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
       reply_user_name = str(reply_user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
      all_family2 = []
       proverka_family = 0

      for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          status_owner_family = 'off'

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3

          status_owner_family = 'on'

          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
         return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       if rank_family < 3:
          return await message.reply(f'‚ùóÔ∏è –ü–æ–Ω–∏–∂–∞—Ç—å —Ä–∞–Ω–≥ –≤ —Å–µ–º—å–µ –º–æ–∂–Ω–æ –æ—Ç <b>3 —Ä–∞–Ω–≥–∞</b>', parse_mode='html')
       else:
          pass
      
       reply_proverka_family = 0

       reply_user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {reply_user_id}').fetchone()

       if reply_user_id_family != None:
          reply_rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {reply_user_id}').fetchone()
          reply_rank_family = int(reply_rank_family[0])  

          reply_name_family = cursor.execute(f'SELECT family from user_family where user_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

       if reply_user_id in all_family2:
          reply_rank_family = 3
         
          reply_name_family = cursor.execute(f'SELECT name from family where owner_id = {reply_user_id}').fetchone()
          reply_name_family = reply_name_family[0]     
       else:
          reply_proverka_family += 1

      if reply_proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ')
       else:
          pass
      
       if reply_name_family != name_family:
          return await message.reply(f'‚ùóÔ∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ')
       else:
          pass

       if reply_rank_family == 3:
          if status_owner_family == 'on':
             pass
          else:
             return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–Ω–∏–∑–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —Å <b>3 —Ä–∞–Ω–≥–æ–º</b> | <i>–ü–æ–¥ —Å–∏–ª—É —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É —Å–µ–º—å–∏</i>', parse_mode='html')
       else:
          pass
      
       if reply_rank_family == 1:
          return await message.reply(f'‚ùóÔ∏è –£ –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ —Ç–∞–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥.')
       else:
          pass

       cursor.execute(f'UPDATE user_family SET rank = {reply_rank_family - 1} WHERE user_id = {reply_user_id}')
       connect.commit()

       text = f'''
 üîΩ –í—ã –ø–æ–Ω–∏–∑–∏–ª–∏ –Ω–∞ 1 —Ä–∞–Ω–≥ –∏–≥—Ä–æ–∫–∞ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
       '''
       await message.reply(text, parse_mode='html')








     if message.text.startswith('–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—ã') or message.text.startswith('–∫—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—ã'):
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

      user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          name_family = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3
         
          name_family = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family = name_family[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       reput = cursor.execute("SELECT reput from reput where user_id = ?",(message.from_user.id,)).fetchone()
       reput = int(reput[0])

       su = msg.text.split()[2]
       su2 = (su).replace(' ', '').replace('k', '000').replace('–µ','e').replace('–∫', '000').replace(',', '').replace('.', '')
       su3 = float(su2)
       summ = int(su3)

       summ2 = '{:,}'.format(summ).replace(',', '.')
      
       if summ < 10:
          return await message.reply(f'‚ùóÔ∏è –ú–æ–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç <code>10</code> <b>—Å–µ–º–µ–π–Ω—ã—Ö –º–æ–Ω–µ—Ç</b>', parse_mode='html')
       else:
          pass

       if summ > reput:
          return await message.reply(f'‚ùóÔ∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ <b>—Ä–µ–ø—É—Ç–∞—Ü–∏–∏</b> | <i>1 —Å. –º–æ–Ω–µ—Ç–∞ = 1 —Ä–µ–ø—É—Ç–∞—Ü–∏—è</i>', parse_mode='html')
       else:
          pass

       if summ <= 0:
          return await message.reply(f'‚ùóÔ∏è –°—É–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ <b>[0 –∏ –º–µ–Ω—å—à–µ]</b>', parse_mode='html')
       else:
          pass
      
       balance_family = cursor.execute(f'SELECT balance from family where name = "{name_family}"').fetchone()
       balance_family = balance_family[0]

       cursor.execute(f'UPDATE family SET balance = {balance_family + summ} WHERE name = "{name_family}"')
       cursor.execute(f'UPDATE reput SET reput = {reput - summ} WHERE user_id = "{user_id}"')
       connect.commit()

       text = f'''
 üí∞ –í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ —Å–µ–º–µ–π–Ω—ã–π –º–µ—à–æ–∫ <code>{summ2}</code> —Å–µ–º–µ–π–Ω—ã–π –º–æ–Ω–µ—Ç
       '''

       await message.reply(text, parse_mode='html')









     if message.text.startswith('+–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏'):
       user_id = message.from_user.id
       user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_name = str(user_name[0])

       all_family = cursor.execute(f'SELECT owner_id from family').fetchall()
       all_family2 = []
       proverka_family = 0

       for all_owner_id in all_family:
          all_family2.append(all_owner_id[0])

       user_id_family = cursor.execute(f'SELECT user_id from user_family where user_id = {user_id}').fetchone()

       if user_id_family != None:
          rank_family = cursor.execute(f'SELECT rank from user_family where user_id = {user_id}').fetchone()
          rank_family = int(rank_family[0])  

          name_family5 = cursor.execute(f'SELECT family from user_family where user_id = {user_id}').fetchone()
          name_family5 = name_family5[0]     
       else:
          proverka_family += 1

       if user_id in all_family2:
          rank_family = 3
         
          name_family5 = cursor.execute(f'SELECT name from family where owner_id = {user_id}').fetchone()
          name_family5 = name_family5[0]     
       else:
          proverka_family += 1

       if proverka_family == 2:
          return await message.reply(f'‚ùóÔ∏è –í—ã <b>–Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ</b> –≤ —Å–µ–º—å–µ  | –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <code>–ü–æ–º–æ—â—å¬ª–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏¬ª—Å–µ–º—å–∏</code>', parse_mode='html')
       else:
          pass

       if rank_family < 3:
          return await message.reply(f'‚ùóÔ∏è –ú–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å <b>3 —Ä–∞–Ω–≥–∞</b>', parse_mode='html')
       else:
          pass

       user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
       user_status = user_status[0]

       if user_status in ['Helper_Admin', 'Owner']:
          period = 1
       else:
          period = 604800 #7d

       get = cursor.execute(f'SELECT time_name FROM family WHERE name = "{name_family5}"').fetchone()
       last_stavka = f"{int(get[0])}"
       stavkatime = time.time() - float(last_stavka)

       if stavkatime < period:
          times2 = time.localtime(float(get[0]))
          print(times2)

          if times2.tm_mday <= 9:
             tm_mday2 = 0
          else:
             tm_mday2 = ''
         
          if times2.tm_mon <= 9:
             tm_mon2 = 0
         else:
             tm_mon2 = ''

          if times2.tm_hour <= 9:
             tm_hour2 = 0
          else:
             tm_hour2 = ''

          if times2.tm_min <= 9:
             tm_min2 = 0
          else:
             tm_min2 = ''

          full_times2 = f'{tm_mday2}{times2.tm_mday}.{tm_mon2}{times2.tm_mon}.{times2.tm_year} –≤ {tm_hour2}{times2.tm_hour}:{tm_min2}{times2.tm_min}'

          return await message.reply(f'‚ùóÔ∏è –ú–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏, –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ <b>7 –¥–Ω–µ–π</b> | –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—ã–ª–æ <code>{full_times2}</code>', parse_mode='html')
       else:
          pass

       name_family = message.text.split()[2:]
       name_family2 = ' '.join(name_family)
       full_name_family = (name_family2).replace(' ','').replace('üá∑üá∫', '').replace('–†–æ—Å—Å–∏—è', '—Ä–æ—Å—Å–∏—è').replace('—Ä–æ—Å—Å–∏—è', '')

       if len(full_name_family) < 4:
          return await message.reply('‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ <b>4 —Å–∏–º–≤–æ–ª–æ–≤</b>', parse_Mode='html')
       elif len(full_name_family) > 35:
          return await message.reply(f'‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ <b>35 —Å–∏–º–≤–æ–ª–æ–≤</b>', parse_mode='html')
       else:
          pass

       all_family_name = cursor.execute('SELECT name from family').fetchall()
       all_family_name2 = []

       for all_family_name3 in all_family_name:
          all_family_name2.append(all_family_name3[0])
   
       if full_name_family in all_family_name2:
          return await message.reply(f'‚ùóÔ∏è –°–µ–º—å—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´<b>{full_name_family}</b>¬ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', parse_mode='html')
       else:
          pass

       cursor.execute(f'UPDATE family SET name = "{full_name_family}" where name = "{name_family5}"')

       sqlite_select_query27 = f"""SELECT * from user_family where family = \"{name_family5}\""""
       cursor.execute(sqlite_select_query27)
       full_user_id_family_update = cursor.fetchall()

       for update_name_family_user_id in full_user_id_family_update:
          print(update_name_family_user_id[1])
          cursor.execute(f'UPDATE user_family SET family = "{full_name_family}" where user_id = "{update_name_family_user_id[1]}"')
       connect.commit()

       text = f'''
 ‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ —Å <b>{name_family5}</b> –Ω–∞ <b>{full_name_family}</b>
       '''

       await message.reply(text, parse_mode='html')




     if message.text.lower() == '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–º—å—è—Ö':
        user_id = message.from_user.id
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
        user_name = str(user_name[0])

        text = f'''
 <a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ ¬´<b>–°–ï–ú–¨–ò</b>¬ª üë®‚Äçüë©‚Äçüëß‚Äçüë¶

 ‚úèÔ∏è <b><code>–°–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é</code> <i>[–Ω–∞–∑–≤–∞–Ω–∏–µ]</i> - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–π —Å–µ–º—å–∏ <i>(–°—Ç–æ–∏–º–æ—Å—Ç—å: {config.cash_family} Donate-Coins ü™ô)</i></b>
 üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b><code>–ú–æ—è —Å–µ–º—å—è</code> | <code>—Å–µ–º—å—è</code> - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞ —Å–µ–º—å—é –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–æ—Å—Ç–æ–∏—Ç–µ </b>
 ‚öôÔ∏è <b><code>+–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏</code> <i>[–Ω–∞–∑–≤–∞–Ω–∏–µ]</i> - –ú–µ–Ω—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–º—å–∏ <i>( –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 7d) (–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 üíé <b><code>–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç—ã</code> <i>[–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]</i> - –ü–æ–∫—É–ø–∫–∞ —Å–µ–º–µ–π–Ω—ã–π –º–æ–Ω–µ—Ç –≤ –º–µ—à–æ–∫ —Å–µ–º—å–∏</b>
 ‚ûñ <b><code>-—Ä–∞–Ω–≥ —Å–µ–º—å–∏</code> - –ü–æ–Ω–∏–∑–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ —Å–µ–º—å–µ –Ω–∞ 1 —Ä–∞–Ω–≥ –Ω–∏–∂–µ <i>(–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 ‚ûï <b><code>+—Ä–∞–Ω–≥ —Å–µ–º—å–∏</code> - –ü–æ–≤—ã—Å–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ —Å–µ–º—å–µ –Ω–∞ 1 —Ä–∞–Ω–≥ –≤—ã—à–µ <i>(–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 üë∂ <b><code>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ —Å–µ–º—å—é</code> - –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≤–∞—à—É —Å–µ–º—å—é <i>(–æ—Ç 2 —Ä–∞–Ω–≥–∞)</i></b>
 ‚ùå <b><code>–í—ã–≥–Ω–∞—Ç—å –∏–∑ —Å–µ–º—å–∏</code> - –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –∏–∑ –≤–∞—à–µ–π —Å–µ–º—å–∏ <i>(–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 üí≠ <b><code>+–æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ–º—å–∏</code> <i>[–æ–ø–∏—Å–∞–Ω–∏–µ]</i> - –£—Å—Ç–æ–Ω–æ–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –≤–∞—à–µ–π —Å–µ–º—å–µ <i>(–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 üòî <b><code>–†–∞—Å–ø—É—Å—Ç–∏—Ç—å —Å–µ–º—å—é</code> - –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–º—å–∏ <i>(–æ—Ç 3 —Ä–∞–Ω–≥–∞)</i></b>
 üîô <b><code>–í—ã–π—Ç–∏ —Å —Å–µ–º—å–∏</code> - –í—ã—Ö–æ–¥ —Å —Å–µ–º—å–∏ </b>

 ‚ùóÔ∏è –ë—É–¥—å—Ç–µ –æ–∫—É—Ä–∞—Ç–Ω–µ–π –ø—Ä–∏ <b>–≤—ã–¥–∞—á–µ —Ä–∞–Ω–≥–∞ –∏–≥—Ä–æ–∫—É</b>
        '''
       
        await message.reply(text, parse_mode='html')
















        # TOP FAMILY

        user_id = callback.from_user.id
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(callback.from_user.id,)).fetchone()
        user_name = str(user_name[0])

        list = cursor.execute(f"SELECT * FROM family ORDER BY balance DESC").fetchmany(10)
        top_list = []

        num = 0

        for user in list:

           num += 1

           if num == 1:
              num2 = '1Ô∏è‚É£'
              num3 = ' <b>üéØ–¢–û–ü 1üéØ</b> |'
           if num == 2:
              num2 = '2Ô∏è‚É£'
              num3 = ''
           if num == 3:
              num2 = '3Ô∏è‚É£'
              num3 = ''
           if num == 4:
              num2 = '4Ô∏è‚É£'
              num3 = ''
           if num == 5:
              num2 = '5Ô∏è‚É£'
              num3 = ''
           if num == 6:
              num2 = '6Ô∏è‚É£'
              num3 = ''
           if num == 7:
              num2 = '7Ô∏è‚É£'
              num3 = ''
           if num == 8:
              num2 = '8Ô∏è‚É£'
              num3 = ''
           if num == 9:
              num2 = '9Ô∏è‚É£'
              num3 = ''
           if num == 10:
              num2 = 'üîü'
              num3 = ''
          
           balance = '{:,}'.format(user[4]).replace(',','.')
          
           if user[1] == config.owner_id:
             pass
           else:
             text = f'{num2} {user[0]} |{num3} üîé ID: <code>{user[3]}</code> | {balance} —Å. –º–æ–Ω–µ—Ç'

           top_list.append(text)  


        if top_list == ['']:
          top_f = '\n    ‚ùóÔ∏è <b>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç—É –Ω–∏ –æ–¥–Ω–æ–π —Å–µ–º—å–∏</b>'
        else:
          top_f = '\n'.join(top_list)

        await callback.message.answer( f"<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç —Ç–æ–ø 10 —Å–µ–º—å–µ–π –≤ ¬´<b>{config.full_bot_name}</b>¬ª:\n" + top_f, parse_mode='html')



